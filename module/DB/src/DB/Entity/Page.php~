<?php

namespace DB\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Page
 */
class Page
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $pathSegment;

    /**
     * @var integer
     */
    private $parent;

    /**
     * @var integer
     */
    private $visible = 0;

    /**
     * @var integer
     */
    private $menuVisible = 0;

    /**
     * @var string
     */
    private $metadata = '';

    /**
     * @var string
     */
    private $pageType = 'page';

    /**
     * @var integer
     */
    private $sort = 0;

    /**
     * @var integer
     */
    private $id;

    /**
     * @var \DB\Entity\Site
     */
    private $site;

    /**
     * @var \DB\Entity\Lang
     */
    private $lang;


    /**
     * Set name
     *
     * @param string $name
     * @return Page
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set pathSegment
     *
     * @param string $pathSegment
     * @return Page
     */
    public function setPathSegment($pathSegment)
    {
        $this->pathSegment = $pathSegment;

        return $this;
    }

    /**
     * Get pathSegment
     *
     * @return string 
     */
    public function getPathSegment()
    {
        return $this->pathSegment;
    }

    /**
     * Set parent
     *
     * @param integer $parent
     * @return Page
     */
    public function setParent($parent)
    {
        $this->parent = $parent;

        return $this;
    }

    /**
     * Get parent
     *
     * @return integer 
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Set visible
     *
     * @param integer $visible
     * @return Page
     */
    public function setVisible($visible)
    {
        $this->visible = $visible;

        return $this;
    }

    /**
     * Get visible
     *
     * @return integer 
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     * Set menuVisible
     *
     * @param integer $menuVisible
     * @return Page
     */
    public function setMenuVisible($menuVisible)
    {
        $this->menuVisible = $menuVisible;

        return $this;
    }

    /**
     * Get menuVisible
     *
     * @return integer 
     */
    public function getMenuVisible()
    {
        return $this->menuVisible;
    }

    /**
     * Set metadata
     *
     * @param string $metadata
     * @return Page
     */
    public function setMetadata($metadata)
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * Get metadata
     *
     * @return string 
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Set pageType
     *
     * @param string $pageType
     * @return Page
     */
    public function setPageType($pageType)
    {
        $this->pageType = $pageType;

        return $this;
    }

    /**
     * Get pageType
     *
     * @return string 
     */
    public function getPageType()
    {
        return $this->pageType;
    }

    /**
     * Set sort
     *
     * @param integer $sort
     * @return Page
     */
    public function setSort($sort)
    {
        $this->sort = $sort;

        return $this;
    }

    /**
     * Get sort
     *
     * @return integer 
     */
    public function getSort()
    {
        return $this->sort;
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set site
     *
     * @param \DB\Entity\Site $site
     * @return Page
     */
    public function setSite(\DB\Entity\Site $site = null)
    {
        $this->site = $site;

        return $this;
    }

    /**
     * Get site
     *
     * @return \DB\Entity\Site 
     */
    public function getSite()
    {
        return $this->site;
    }

    /**
     * Set lang
     *
     * @param \DB\Entity\Lang $lang
     * @return Page
     */
    public function setLang(\DB\Entity\Lang $lang = null)
    {
        $this->lang = $lang;

        return $this;
    }

    /**
     * Get lang
     *
     * @return \DB\Entity\Lang 
     */
    public function getLang()
    {
        return $this->lang;
    }
    /**
     * @var integer
     */
    private $createdAt;


    /**
     * Set createdAt
     *
     * @param integer $createdAt
     * @return Page
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return integer 
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }
    
    public function __construct() {
        $this->setCreatedAt(time());
    }
    /**
     * @var string
     */
    private $title;


    /**
     * Set title
     *
     * @param string $title
     * @return Page
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle()
    {
        return $this->title;
    }


    /**
     * @var \DB\Entity\Page
     */
    private $origin;


    /**
     * Set origin
     *
     * @param \DB\Entity\Page $origin
     * @return Page
     */
    public function setOrigin(\DB\Entity\Page $origin = null)
    {
        $this->origin = $origin;

        return $this;
    }

    /**
     * Get origin
     *
     * @return \DB\Entity\Page 
     */
    public function getOrigin()
    {
        return $this->origin;
    }

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $children;


    /**
     * Add children
     *
     * @param \DB\Entity\Page $children
     * @return Page
     */
    public function addChild(\DB\Entity\Page $children)
    {
        $this->children[] = $children;

        return $this;
    }

    /**
     * Remove children
     *
     * @param \DB\Entity\Page $children
     */
    public function removeChild(\DB\Entity\Page $children)
    {
        $this->children->removeElement($children);
    }

    /**
     * Get children
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getChildren()
    {
        return $this->children;
    }
    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $contents;


    /**
     * Add contents
     *
     * @param \DB\Entity\Content $contents
     * @return Page
     */
    public function addContent(\DB\Entity\Content $contents)
    {
        $this->contents[] = $contents;
    
        return $this;
    }

    /**
     * Remove contents
     *
     * @param \DB\Entity\Content $contents
     */
    public function removeContent(\DB\Entity\Content $contents)
    {
        $this->contents->removeElement($contents);
    }

    /**
     * Get contents
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getContents()
    {
        return $this->contents;
    }
    
    public function getContentById($id){
        foreach($this->contents as $content){
            if($content->getId() == $id){
                return $content;
            }
        }
        return false;
    }
    
}
